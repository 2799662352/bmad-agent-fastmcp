workflow:
  id: brownfield-service
  name: Brownfield Service Enhancement
  description: >
    Agent workflow for enhancing existing backend services, APIs, or microservices.
    Handles service analysis, API design, and safe integration patterns.
  type: brownfield
  project_types:
    - api-enhancement
    - service-refactoring
    - microservice-addition
    - integration-update

  sequence:
    - step: enhancement_classification
      agent: analyst
      action: classify service enhancement scope
      notes: |
        Determine enhancement complexity:
        - Single endpoint/function → Use brownfield-create-story
        - Small service feature → Use brownfield-create-epic
        - Major service changes → Continue with full workflow

    - step: routing_decision
      condition: based_on_classification
      routes:
        single_change:
          agent: pm
          uses: brownfield-create-story
          notes: "Create single story for immediate implementation."
        small_feature:
          agent: pm
          uses: brownfield-create-epic
          notes: "Create focused epic with related stories."
        major_enhancement:
          continue: to_next_step

    - step: service_analysis
      agent: analyst
      action: analyze existing service
      condition: major_enhancement_path
      uses: document-project
      notes: "Document current service architecture, APIs, dependencies, and data flows."

    - step: requirements_definition
      agent: pm
      creates: brownfield-prd.md
      requires: service analysis
      uses: brownfield-prd-tmpl
      notes: "Create PRD focused on service enhancements and API changes."

    - step: service_architecture
      agent: architect
      creates: service-architecture.md
      requires: brownfield-prd.md
      uses: architecture-tmpl
      notes: "Design service architecture, API specifications, and integration patterns."

    - step: implementation_planning
      agent: po
      creates: implementation-plan.md
      requires: service-architecture.md
      notes: "Break down architecture into implementable stories with clear acceptance criteria."

    - step: development_readiness
      agent: dev
      action: validate development readiness
      requires: implementation-plan.md
      notes: "Review stories for completeness and technical feasibility. Flag any blockers."

  deliverables:
    - Service analysis documentation
    - Enhanced service PRD
    - Service architecture specification
    - Implementation plan with stories
    - Development-ready backlog

  success_criteria:
    - Clear understanding of existing service
    - Well-defined enhancement requirements
    - Comprehensive service architecture
    - Actionable implementation plan
    - Development team ready to proceed